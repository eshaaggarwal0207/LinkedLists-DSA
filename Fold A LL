#include<iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* next;

    Node(int data){
        this-> data= data;
        this-> next= NULL;
    }
};

Node* reverse(Node* head){
    Node* prev= NULL;
    Node* curr= head;
    Node* next;
    while (curr != NULL)
    {
        next= curr->next;
        curr->next= prev;
        
        prev= curr;
        curr= next;
    }
    head= prev;
    return head;
}

Node* Mid(Node* head){
    Node* slow= head;
    Node* fast= head->next;
    while (fast != NULL && fast->next != NULL)
    {
        slow = slow->next;
        fast = fast->next->next;
    }
    return slow;
}

Node* FoldaLL(Node* head){
    if (head == NULL || head->next == NULL)
    {
        return head;
    }

    Node* mid = Mid(head);
    Node* head1 = head;
    Node* head2 = mid->next;
    mid->next = NULL;

    Node* second = reverse(head2);
    Node* res = new Node(-1);
    Node* temp = res;
    while (head1 != NULL || second != NULL)
    {
        if (head1 != NULL)
        {
            temp->next = head1;
            temp= head1;
            head1 = head1->next;
        }

        if (head2 != NULL)
        {
            temp->next = head2;
            temp= head2;
            head2 = head2->next;
        }
        
    }
    
    res = res->next;
    return res;

}
