#include<iostream>
using namespace std;

class Node{
    public:
    int data;
    Node* next;

    Node(int data){
        this-> data= data;
        this-> next= NULL;
    }
};

Node* GetMid(Node* head){
    Node* slow = head;
    Node* fast = head->next;
    while (fast != NULL && fast->next != NULL)
    {
        slow = slow->next;
        fast = fast->next->next;
    }
    return slow;
}

Node* Merge(Node* left,Node* right){
    if (left == NULL)
    {
        return right;
    }
    if (right == NULL)
    {
        return left;
    }
    Node* dummy = new Node(-1);
    Node* temp = dummy;

    while (right != NULL && left != NULL)
    {
        if (left->data < right->data)
        {
            temp->next = left;
            temp = left;
            left = left->next;
        }else{
            temp->next = right;
            temp = right;
            right = right->next;
        }
    }
    
    while (left != NULL)
        {
            temp->next = left;
            temp = left;
            left = left->next;
        }

        while (right != NULL)
        {
            temp->next = right;
            temp = right;
            right = right->next;
        }

    dummy = dummy->next;
    return dummy;
    
}

Node* MergeSort(Node* &head){
    if (head == NULL || head->next == NULL)
    {
        return head;
    }

    Node* mid = GetMid(head);

    Node* left = head;
    Node* right = mid->next;
    mid->next = NULL;

    left = MergeSort(left);
    right = MergeSort(right);

    Node* result = Merge(left,right);
    return result;
}
